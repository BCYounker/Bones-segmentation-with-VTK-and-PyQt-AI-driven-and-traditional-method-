# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'testvtkgui3.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

from vtk.qt.QVTKRenderWindowInteractor import QVTKRenderWindowInteractor
class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1271, 930)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setObjectName("widget")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.widget)
        self.horizontalLayout_2.setContentsMargins(9, -1, -1, -1)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setContentsMargins(-1, -1, -1, 0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.horizontalLayout_layTop = QtWidgets.QHBoxLayout()
        self.horizontalLayout_layTop.setContentsMargins(-1, -1, 0, -1)
        self.horizontalLayout_layTop.setObjectName("horizontalLayout_layTop")
        self.widget_vtkTop = QVTKRenderWindowInteractor(self.widget)
        self.widget_vtkTop.setObjectName("widget_vtkTop")
        self.horizontalLayout_layTop.addWidget(self.widget_vtkTop)
        self.verticalSliderTop = QtWidgets.QSlider(self.widget)
        self.verticalSliderTop.setStyleSheet("QSlider::groove:vertical {\n"
"    border: 1px solid #999999; /* Border color for the groove */\n"
"    width: 10px; /* Groove width for vertical slider */\n"
"}\n"
"\n"
"QSlider::handle:vertical {\n"
"    background: #FFFFFF; /* Handle background color */\n"
"    height: 10px; /* Handle height for vertical slider */\n"
"    margin: -1px -1px; /* Margin adjusted to fit the vertical groove */\n"
"    border-radius: 5px; /* Border-radius for rounded corners */\n"
"    border: 1px solid #5555FF; /* Border color for the handle */\n"
"}\n"
"\n"
"QSlider::handle:vertical:hover {\n"
"    background: #FFFFFF; /* Background color for handle on hover */\n"
"    border-color: #FFFFFF; /* Border color for handle on hover */\n"
"}\n"
"\n"
"QSlider::sub-page:vertical {\n"
"    background: #A1C7E0; /* Updated main color for the sub-page */\n"
"}\n"
"\n"
"QSlider::add-page:vertical {\n"
"    background: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #B1B1B1, stop:1 #C4C4C4); /* Gradient for the add-page */\n"
"}\n"
"")
        self.verticalSliderTop.setOrientation(QtCore.Qt.Vertical)
        self.verticalSliderTop.setObjectName("verticalSliderTop")
        self.horizontalLayout_layTop.addWidget(self.verticalSliderTop)
        self.verticalLayout_4.addLayout(self.horizontalLayout_layTop)
        self.horizontalLayout_layMid = QtWidgets.QHBoxLayout()
        self.horizontalLayout_layMid.setContentsMargins(-1, -1, 0, -1)
        self.horizontalLayout_layMid.setObjectName("horizontalLayout_layMid")
        self.widget_vtkMid = QVTKRenderWindowInteractor(self.widget)
        self.widget_vtkMid.setObjectName("widget_vtkMid")
        self.horizontalLayout_layMid.addWidget(self.widget_vtkMid)
        self.verticalSliderMid = QtWidgets.QSlider(self.widget)
        self.verticalSliderMid.setStyleSheet("QSlider::groove:vertical {\n"
"    border: 1px solid #999999; /* Border color for the groove */\n"
"    width: 10px; /* Groove width for vertical slider */\n"
"}\n"
"\n"
"QSlider::handle:vertical {\n"
"    background: #FFFFFF; /* Handle background color */\n"
"    height: 10px; /* Handle height for vertical slider */\n"
"    margin: -1px -1px; /* Margin adjusted to fit the vertical groove */\n"
"    border-radius: 5px; /* Border-radius for rounded corners */\n"
"    border: 1px solid #5555FF; /* Border color for the handle */\n"
"}\n"
"\n"
"QSlider::handle:vertical:hover {\n"
"    background: #FFFFFF; /* Background color for handle on hover */\n"
"    border-color: #FFFFFF; /* Border color for handle on hover */\n"
"}\n"
"\n"
"QSlider::sub-page:vertical {\n"
"    background: #A1C7E0; /* Updated main color for the sub-page */\n"
"}\n"
"\n"
"QSlider::add-page:vertical {\n"
"    background: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #B1B1B1, stop:1 #C4C4C4); /* Gradient for the add-page */\n"
"}\n"
"")
        self.verticalSliderMid.setOrientation(QtCore.Qt.Vertical)
        self.verticalSliderMid.setObjectName("verticalSliderMid")
        self.horizontalLayout_layMid.addWidget(self.verticalSliderMid)
        self.verticalLayout_4.addLayout(self.horizontalLayout_layMid)
        self.horizontalLayout_layBottom = QtWidgets.QHBoxLayout()
        self.horizontalLayout_layBottom.setContentsMargins(-1, -1, 0, -1)
        self.horizontalLayout_layBottom.setObjectName("horizontalLayout_layBottom")
        self.widget_vtkBottom = QVTKRenderWindowInteractor(self.widget)
        self.widget_vtkBottom.setObjectName("widget_vtkBottom")
        self.horizontalLayout_layBottom.addWidget(self.widget_vtkBottom)
        self.verticalSliderBottom = QtWidgets.QSlider(self.widget)
        self.verticalSliderBottom.setStyleSheet("QSlider::groove:vertical {\n"
"    border: 1px solid #999999; /* Border color for the groove */\n"
"    width: 10px; /* Groove width for vertical slider */\n"
"}\n"
"\n"
"QSlider::handle:vertical {\n"
"    background: #FFFFFF; /* Handle background color */\n"
"    height: 10px; /* Handle height for vertical slider */\n"
"    margin: -1px -1px; /* Margin adjusted to fit the vertical groove */\n"
"    border-radius: 5px; /* Border-radius for rounded corners */\n"
"    border: 1px solid #5555FF; /* Border color for the handle */\n"
"}\n"
"\n"
"QSlider::handle:vertical:hover {\n"
"    background: #FFFFFF; /* Background color for handle on hover */\n"
"    border-color: #FFFFFF; /* Border color for handle on hover */\n"
"}\n"
"\n"
"QSlider::sub-page:vertical {\n"
"    background: #A1C7E0; /* Updated main color for the sub-page */\n"
"}\n"
"\n"
"QSlider::add-page:vertical {\n"
"    background: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #B1B1B1, stop:1 #C4C4C4); /* Gradient for the add-page */\n"
"}\n"
"")
        self.verticalSliderBottom.setOrientation(QtCore.Qt.Vertical)
        self.verticalSliderBottom.setObjectName("verticalSliderBottom")
        self.horizontalLayout_layBottom.addWidget(self.verticalSliderBottom)
        self.verticalLayout_4.addLayout(self.horizontalLayout_layBottom)
        self.verticalLayout_4.setStretch(0, 1)
        self.verticalLayout_4.setStretch(1, 1)
        self.verticalLayout_4.setStretch(2, 1)
        self.horizontalLayout_2.addLayout(self.verticalLayout_4)
        self.formLayout = QtWidgets.QFormLayout()
        self.formLayout.setObjectName("formLayout")
        self.horizontalLayout_2.addLayout(self.formLayout)
        self.horizontalLayout_2.setStretch(0, 1)
        self.horizontalLayout_2.setStretch(1, 2)
        self.horizontalLayout.addWidget(self.widget)
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox.sizePolicy().hasHeightForWidth())
        self.groupBox.setSizePolicy(sizePolicy)
        self.groupBox.setMinimumSize(QtCore.QSize(300, 0))
        self.groupBox.setTitle("")
        self.groupBox.setObjectName("groupBox")
        self.layoutWidget = QtWidgets.QWidget(self.groupBox)
        self.layoutWidget.setGeometry(QtCore.QRect(20, 10, 271, 791))
        self.layoutWidget.setObjectName("layoutWidget")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.groupBox_2 = QtWidgets.QGroupBox(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox_2.sizePolicy().hasHeightForWidth())
        self.groupBox_2.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.groupBox_2.setFont(font)
        self.groupBox_2.setStyleSheet("QGroupBox {\n"
"paddig:0px;\n"
"margin:0px;\n"
"}")
        self.groupBox_2.setObjectName("groupBox_2")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.groupBox_2)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        spacerItem = QtWidgets.QSpacerItem(20, 8, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout_5.addItem(spacerItem)
        self.checkBox = QtWidgets.QCheckBox(self.groupBox_2)
        self.checkBox.setObjectName("checkBox")
        self.verticalLayout_5.addWidget(self.checkBox)
        spacerItem1 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout_5.addItem(spacerItem1)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.horizontalLayout_6.setContentsMargins(-1, 0, -1, -1)
        self.horizontalLayout_6.setSpacing(0)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.label = QtWidgets.QLabel(self.groupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setObjectName("label")
        self.horizontalLayout_6.addWidget(self.label)
        self.label_up = QtWidgets.QLabel(self.groupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_up.sizePolicy().hasHeightForWidth())
        self.label_up.setSizePolicy(sizePolicy)
        self.label_up.setText("")
        self.label_up.setObjectName("label_up")
        self.horizontalLayout_6.addWidget(self.label_up)
        self.verticalLayout_5.addLayout(self.horizontalLayout_6)
        self.horizontalSliderUp = QtWidgets.QSlider(self.groupBox_2)
        self.horizontalSliderUp.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999; /* Border color for the groove */\n"
"    height: 10px; /* Groove height for horizontal slider */\n"
"    /* Width is automatically adjusted to the slider\'s width */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: #FFFFFF; /* Handle background color */\n"
"    width: 10px; /* Handle width for horizontal slider */\n"
"    margin: -1px -1px; /* Margin adjusted to fit the horizontal groove */\n"
"    border-radius: 5px; /* Border-radius for rounded corners */\n"
"    border: 1px solid #5555FF; /* Border color for the handle */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: #FFFFFF; /* Background color for handle on hover */\n"
"    border-color: #FFFFFF; /* Border color for handle on hover */\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: qlineargradient(x1:0, y1:0, x2:1, y2:0, stop:0 #B1B1B1, stop:1 #C4C4C4); /* Gradient for the area to the right of the handle */\n"
"}\n"
"\n"
"QSlider::sub-page:horizontal {\n"
"    background: #A1C7E0; /* Main color #A1C7E0 now applied to the dragged area (to the left of the handle) */\n"
"}\n"
"")
        self.horizontalSliderUp.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderUp.setObjectName("horizontalSliderUp")
        self.verticalLayout_5.addWidget(self.horizontalSliderUp)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setSpacing(0)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.label2 = QtWidgets.QLabel(self.groupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label2.sizePolicy().hasHeightForWidth())
        self.label2.setSizePolicy(sizePolicy)
        self.label2.setObjectName("label2")
        self.horizontalLayout_7.addWidget(self.label2)
        self.label_lower = QtWidgets.QLabel(self.groupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_lower.sizePolicy().hasHeightForWidth())
        self.label_lower.setSizePolicy(sizePolicy)
        self.label_lower.setText("")
        self.label_lower.setObjectName("label_lower")
        self.horizontalLayout_7.addWidget(self.label_lower)
        self.verticalLayout_5.addLayout(self.horizontalLayout_7)
        self.horizontalSliderLower = QtWidgets.QSlider(self.groupBox_2)
        self.horizontalSliderLower.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999; /* Border color for the groove */\n"
"    height: 10px; /* Groove height for horizontal slider */\n"
"    /* Width is automatically adjusted to the slider\'s width */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: #FFFFFF; /* Handle background color */\n"
"    width: 10px; /* Handle width for horizontal slider */\n"
"    margin: -1px -1px; /* Margin adjusted to fit the horizontal groove */\n"
"    border-radius: 5px; /* Border-radius for rounded corners */\n"
"    border: 1px solid #5555FF; /* Border color for the handle */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: #FFFFFF; /* Background color for handle on hover */\n"
"    border-color: #FFFFFF; /* Border color for handle on hover */\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: qlineargradient(x1:0, y1:0, x2:1, y2:0, stop:0 #B1B1B1, stop:1 #C4C4C4); /* Gradient for the area to the right of the handle */\n"
"}\n"
"\n"
"QSlider::sub-page:horizontal {\n"
"    background: #A1C7E0; /* Main color #A1C7E0 now applied to the dragged area (to the left of the handle) */\n"
"}\n"
"")
        self.horizontalSliderLower.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderLower.setObjectName("horizontalSliderLower")
        self.verticalLayout_5.addWidget(self.horizontalSliderLower)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.label_3 = QtWidgets.QLabel(self.groupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_3.sizePolicy().hasHeightForWidth())
        self.label_3.setSizePolicy(sizePolicy)
        self.label_3.setMinimumSize(QtCore.QSize(0, 0))
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_5.addWidget(self.label_3)
        self.label_cubes = QtWidgets.QLabel(self.groupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_cubes.sizePolicy().hasHeightForWidth())
        self.label_cubes.setSizePolicy(sizePolicy)
        self.label_cubes.setObjectName("label_cubes")
        self.horizontalLayout_5.addWidget(self.label_cubes)
        self.verticalLayout_5.addLayout(self.horizontalLayout_5)
        self.horizontalSlider = QtWidgets.QSlider(self.groupBox_2)
        self.horizontalSlider.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999; /* Border color for the groove */\n"
"    height: 10px; /* Groove height for horizontal slider */\n"
"    /* Width is automatically adjusted to the slider\'s width */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: #FFFFFF; /* Handle background color */\n"
"    width: 10px; /* Handle width for horizontal slider */\n"
"    margin: -1px -1px; /* Margin adjusted to fit the horizontal groove */\n"
"    border-radius: 5px; /* Border-radius for rounded corners */\n"
"    border: 1px solid #5555FF; /* Border color for the handle */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: #FFFFFF; /* Background color for handle on hover */\n"
"    border-color: #FFFFFF; /* Border color for handle on hover */\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: qlineargradient(x1:0, y1:0, x2:1, y2:0, stop:0 #B1B1B1, stop:1 #C4C4C4); /* Gradient for the area to the right of the handle */\n"
"}\n"
"\n"
"QSlider::sub-page:horizontal {\n"
"    background: #A1C7E0; /* Main color #A1C7E0 now applied to the dragged area (to the left of the handle) */\n"
"}\n"
"")
        self.horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider.setObjectName("horizontalSlider")
        self.verticalLayout_5.addWidget(self.horizontalSlider)
        spacerItem2 = QtWidgets.QSpacerItem(20, 5, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout_5.addItem(spacerItem2)
        self.ThresholdSeg = QtWidgets.QPushButton(self.groupBox_2)
        self.ThresholdSeg.setObjectName("ThresholdSeg")
        self.verticalLayout_5.addWidget(self.ThresholdSeg)
        spacerItem3 = QtWidgets.QSpacerItem(20, 5, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout_5.addItem(spacerItem3)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.RegionGrowing = QtWidgets.QPushButton(self.groupBox_2)
        self.RegionGrowing.setObjectName("RegionGrowing")
        self.horizontalLayout_4.addWidget(self.RegionGrowing)
        self.Select2 = QtWidgets.QPushButton(self.groupBox_2)
        self.Select2.setObjectName("Select2")
        self.horizontalLayout_4.addWidget(self.Select2)
        self.verticalLayout_5.addLayout(self.horizontalLayout_4)
        spacerItem4 = QtWidgets.QSpacerItem(20, 5, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout_5.addItem(spacerItem4)
        self.ExportSTL = QtWidgets.QPushButton(self.groupBox_2)
        self.ExportSTL.setObjectName("ExportSTL")
        self.verticalLayout_5.addWidget(self.ExportSTL)
        spacerItem5 = QtWidgets.QSpacerItem(20, 5, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout_5.addItem(spacerItem5)
        self.line_2 = QtWidgets.QFrame(self.groupBox_2)
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.verticalLayout_5.addWidget(self.line_2)
        self.label_6 = QtWidgets.QLabel(self.groupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_6.sizePolicy().hasHeightForWidth())
        self.label_6.setSizePolicy(sizePolicy)
        self.label_6.setObjectName("label_6")
        self.verticalLayout_5.addWidget(self.label_6)
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_8.setContentsMargins(-1, 0, 0, 0)
        self.horizontalLayout_8.setSpacing(9)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.comboBox_1 = QtWidgets.QComboBox(self.groupBox_2)
        self.comboBox_1.setObjectName("comboBox_1")
        self.horizontalLayout_8.addWidget(self.comboBox_1)
        self.comboBox_2 = QtWidgets.QComboBox(self.groupBox_2)
        self.comboBox_2.setObjectName("comboBox_2")
        self.horizontalLayout_8.addWidget(self.comboBox_2)
        self.verticalLayout_5.addLayout(self.horizontalLayout_8)
        self.ExportSTLAI = QtWidgets.QPushButton(self.groupBox_2)
        self.ExportSTLAI.setObjectName("ExportSTLAI")
        self.verticalLayout_5.addWidget(self.ExportSTLAI)
        self.groupBox_3 = QtWidgets.QGroupBox(self.groupBox_2)
        self.groupBox_3.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox_3.sizePolicy().hasHeightForWidth())
        self.groupBox_3.setSizePolicy(sizePolicy)
        self.groupBox_3.setMinimumSize(QtCore.QSize(0, 160))
        self.groupBox_3.setTitle("")
        self.groupBox_3.setObjectName("groupBox_3")
        self.layoutWidget1 = QtWidgets.QWidget(self.groupBox_3)
        self.layoutWidget1.setGeometry(QtCore.QRect(10, 10, 251, 141))
        self.layoutWidget1.setObjectName("layoutWidget1")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.layoutWidget1)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        # self.widget_VTK2 = QVTKRenderWindowInteractor(self.widget1)
        # self.widget_VTK2.setObjectName("widget_VTK2")
        # self.horizontalLayout_3.addWidget(self.widget_VTK2)
        # self.widget_VTK3 = QVTKRenderWindowInteractor(self.widget1)
        # self.widget_VTK3.setObjectName("widget_VTK3")
        self.widget_2 = QVTKRenderWindowInteractor(self.layoutWidget1)
        self.widget_2.setObjectName("widget_2")
        self.horizontalLayout_3.addWidget(self.widget_2)
        self.widget_3 = QVTKRenderWindowInteractor(self.layoutWidget1)
        self.widget_3.setObjectName("widget_3")
        self.horizontalLayout_3.addWidget(self.widget_3)
        self.verticalLayout_5.addWidget(self.groupBox_3)
        spacerItem6 = QtWidgets.QSpacerItem(20, 10, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout_5.addItem(spacerItem6)
        self.verticalLayout_6.addWidget(self.groupBox_2)
        self.windowlevelgroupBox = QtWidgets.QGroupBox(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.windowlevelgroupBox.sizePolicy().hasHeightForWidth())
        self.windowlevelgroupBox.setSizePolicy(sizePolicy)
        self.windowlevelgroupBox.setMinimumSize(QtCore.QSize(60, 120))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.windowlevelgroupBox.setFont(font)
        self.windowlevelgroupBox.setStyleSheet("QGroupBox {\n"
"paddig:0px;\n"
"margin:0px;\n"
"}")
        self.windowlevelgroupBox.setObjectName("windowlevelgroupBox")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.windowlevelgroupBox)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        spacerItem7 = QtWidgets.QSpacerItem(20, 5, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_3.addItem(spacerItem7)
        self.WindowCenterLabel = QtWidgets.QLabel(self.windowlevelgroupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.WindowCenterLabel.sizePolicy().hasHeightForWidth())
        self.WindowCenterLabel.setSizePolicy(sizePolicy)
        self.WindowCenterLabel.setObjectName("WindowCenterLabel")
        self.verticalLayout_3.addWidget(self.WindowCenterLabel)
        self.WindowCenterSlider = QtWidgets.QSlider(self.windowlevelgroupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.WindowCenterSlider.sizePolicy().hasHeightForWidth())
        self.WindowCenterSlider.setSizePolicy(sizePolicy)
        self.WindowCenterSlider.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999; /* Border color for the groove */\n"
"    height: 10px; /* Groove height for horizontal slider */\n"
"    /* Width is automatically adjusted to the slider\'s width */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: #FFFFFF; /* Handle background color */\n"
"    width: 10px; /* Handle width for horizontal slider */\n"
"    margin: -1px -1px; /* Margin adjusted to fit the horizontal groove */\n"
"    border-radius: 5px; /* Border-radius for rounded corners */\n"
"    border: 1px solid #5555FF; /* Border color for the handle */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: #FFFFFF; /* Background color for handle on hover */\n"
"    border-color: #FFFFFF; /* Border color for handle on hover */\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: qlineargradient(x1:0, y1:0, x2:1, y2:0, stop:0 #B1B1B1, stop:1 #C4C4C4); /* Gradient for the area to the right of the handle */\n"
"}\n"
"\n"
"QSlider::sub-page:horizontal {\n"
"    background: #A1C7E0; /* Main color #A1C7E0 now applied to the dragged area (to the left of the handle) */\n"
"}\n"
"")
        self.WindowCenterSlider.setOrientation(QtCore.Qt.Horizontal)
        self.WindowCenterSlider.setObjectName("WindowCenterSlider")
        self.verticalLayout_3.addWidget(self.WindowCenterSlider)
        self.WindowWidthLabel = QtWidgets.QLabel(self.windowlevelgroupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.WindowWidthLabel.sizePolicy().hasHeightForWidth())
        self.WindowWidthLabel.setSizePolicy(sizePolicy)
        self.WindowWidthLabel.setObjectName("WindowWidthLabel")
        self.verticalLayout_3.addWidget(self.WindowWidthLabel)
        self.WindowWidthSlider = QtWidgets.QSlider(self.windowlevelgroupBox)
        self.WindowWidthSlider.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999; /* Border color for the groove */\n"
"    height: 10px; /* Groove height for horizontal slider */\n"
"    /* Width is automatically adjusted to the slider\'s width */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: #FFFFFF; /* Handle background color */\n"
"    width: 10px; /* Handle width for horizontal slider */\n"
"    margin: -1px -1px; /* Margin adjusted to fit the horizontal groove */\n"
"    border-radius: 5px; /* Border-radius for rounded corners */\n"
"    border: 1px solid #5555FF; /* Border color for the handle */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: #FFFFFF; /* Background color for handle on hover */\n"
"    border-color: #FFFFFF; /* Border color for handle on hover */\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: qlineargradient(x1:0, y1:0, x2:1, y2:0, stop:0 #B1B1B1, stop:1 #C4C4C4); /* Gradient for the area to the right of the handle */\n"
"}\n"
"\n"
"QSlider::sub-page:horizontal {\n"
"    background: #A1C7E0; /* Main color #A1C7E0 now applied to the dragged area (to the left of the handle) */\n"
"}\n"
"")
        self.WindowWidthSlider.setOrientation(QtCore.Qt.Horizontal)
        self.WindowWidthSlider.setObjectName("WindowWidthSlider")
        self.verticalLayout_3.addWidget(self.WindowWidthSlider)
        self.verticalLayout_6.addWidget(self.windowlevelgroupBox)
        self.horizontalLayout.addWidget(self.groupBox)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1271, 23))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setMinimumSize(QtCore.QSize(0, 50))
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.groupBox_2.setTitle(_translate("MainWindow", "Segmentation"))
        self.checkBox.setText(_translate("MainWindow", "Surface rendering"))
        self.label.setText(_translate("MainWindow", "Threshold Segmentation (High)"))
        self.label2.setText(_translate("MainWindow", "Threshold Segmentration (Low)"))
        self.label_3.setText(_translate("MainWindow", "Marching Cubes Value"))
        self.label_cubes.setText(_translate("MainWindow", " "))
        self.ThresholdSeg.setText(_translate("MainWindow", "Threshold Segmentation"))
        self.RegionGrowing.setText(_translate("MainWindow", "Region Growing"))
        self.Select2.setText(_translate("MainWindow", "Select Objects"))
        self.ExportSTL.setText(_translate("MainWindow", "Export STL (Manual)"))
        self.label_6.setText(_translate("MainWindow", "Select 2 classes"))
        self.ExportSTLAI.setText(_translate("MainWindow", "Export STL (AI)"))
        self.windowlevelgroupBox.setTitle(_translate("MainWindow", "Windowing (CT)"))
        self.WindowCenterLabel.setText(_translate("MainWindow", "Window Center(Brigtness)"))
        self.WindowWidthLabel.setText(_translate("MainWindow", "Window Width (Contrast)"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
